import numpy as npimport pandas as pdpandaSata = pd.read_csv('/Users/kierensinghgill/Desktop/Homework/2021 Spring/Intro to DataSci/Datasets/movieRatingsDeidentified.csv', delimiter = ',')sata = np.genfromtxt('/Users/kierensinghgill/Desktop/Homework/2021 Spring/Intro to DataSci/Datasets/movieRatingsDeidentified.csv', delimiter=',', skip_header=1)temp = np.copy(sata) #Make a copy of satanumrows = len(temp)numcols = len(temp[0])pearColRatingsMatrix = np.empty((numcols,numcols))#Creating a for loop#Take a column, calculate correlation with all other columns#Store these correlations in a matrixfor i in range(0, numcols):       columnInQuestion = temp[:,i]    for j in range (0, numcols):             columnInComparison = temp[:,j]         calculationMatrix = np.c_[columnInQuestion,columnInComparison]        calculationMatrix = calculationMatrix[~np.isnan(calculationMatrix).any(axis=1)]        r = np.corrcoef(calculationMatrix[:,0],calculationMatrix[:,1])[1,0]        pearColRatingsMatrix[i,j] = rheadings = pandaSata.columnsdef pearsonCorrRatings(movie1,movie2):    a = headings.get_loc(movie1)    b = headings.get_loc(movie2)    print (pearColRatingsMatrix[a,b])from scipy import statsspearColRatingsMatrix = np.empty((numcols,numcols))for i in range(0, numcols):       columnInQuestion = temp[:,i]    for j in range (0, numcols):             columnInComparison = temp[:,j]         calculationMatrix = np.c_[columnInQuestion,columnInComparison]        calculationMatrix = calculationMatrix[~np.isnan(calculationMatrix).any(axis=1)]        r = stats.spearmanr(calculationMatrix[:,0],calculationMatrix[:,1])[0]        spearColRatingsMatrix[i,j] = rdef spearmanCorrRatings(movie1,movie2):    a = headings.get_loc(movie1)    b = headings.get_loc(movie2)    print (spearColRatingsMatrix[a,b])pearsonCorrRatings("Star Wars: Episode I - The Phantom Menace (1999)", "Star Wars: Episode II - Attack of the Clones (2002)")#0.8077201612222397pearsonCorrRatings("10 things I hate about you (1999)", "12 Monkeys (1995)")#0.12172546287877405pearsonCorrRatings("Kill Bill: Vol. 1 (2003)", "Kill Bill: Vol. 2 (2004)")#0.822376210436973pearsonCorrRatings("Donnie Darko (2001)", "Mulholland Dr. (2001)")#0.3988066018602162spearmanCorrRatings("Star Wars: Episode I - The Phantom Menace (1999)", "Star Wars: Episode II - Attack of the Clones (2002)")#0.8030417534323357spearmanCorrRatings("10 things I hate about you (1999)", "12 Monkeys (1995)")#0.09818146894154108spearmanCorrRatings("Kill Bill: Vol. 1 (2003)", "Kill Bill: Vol. 2 (2004)")#0.7780197311106779spearmanCorrRatings("Donnie Darko (2001)", "Mulholland Dr. (2001)")#0.31730827888159374#Pearson First User x Last User#0.11531978068447772#Spearman First User x Last User#0.16000041515395594# =============================================================================# temp = np.transpose(temp)# numrows = len(temp)# numcols = len(temp[0])# # pearColUsersMatrix = np.empty((numcols,numcols))# # for i in range(0, 1):   #     columnInQuestion = temp[:,i]#     for j in range (0, numcols):     #         columnInComparison = temp[:,j] #         calculationMatrix = np.c_[columnInQuestion,columnInComparison]#         calculationMatrix = calculationMatrix[~np.isnan(calculationMatrix).any(axis=1)]#         r = np.corrcoef(calculationMatrix[:,0],calculationMatrix[:,1])[1,0]#         pearColUsersMatrix[i,j] = r# =============================================================================# =============================================================================# temp = np.transpose(temp)# numrows = len(temp)# numcols = len(temp[0])# # spearColUsersMatrix = np.empty((numcols,numcols))# # for i in range(0, 1):   #     columnInQuestion = temp[:,i]#     for j in range (0, numcols):     #         columnInComparison = temp[:,j] #         calculationMatrix = np.c_[columnInQuestion,columnInComparison]#         calculationMatrix = calculationMatrix[~np.isnan(calculationMatrix).any(axis=1)]#         r = stats.spearmanr(calculationMatrix[:,0],calculationMatrix[:,1])[0]#         spearColUsersMatrix[i,j] = r# =============================================================================            